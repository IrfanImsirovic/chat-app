version: '3.8'

services:
  # PostgreSQL Database
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: chat-database
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend/chat
      dockerfile: Dockerfile
    container_name: chat-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/chatapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/users/online"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8080
    container_name: chat-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - chat-network
    environment:
      - VITE_API_URL=http://localhost:8080

volumes:
  postgres_data:

networks:
  chat-network:
    driver: bridge
